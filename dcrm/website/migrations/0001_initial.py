# Generated by Django 4.2.9 on 2024-01-31 10:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('registered_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_owner', models.BooleanField(default=False, verbose_name='Is owner')),
                ('is_tenant', models.BooleanField(default=False, verbose_name='Is tenant')),
                ('is_PF', models.BooleanField(default=False, verbose_name='Is problem fixers')),
                ('groups', models.ManyToManyField(related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending Approval', 'Pending Approval'), ('Approved for Inspection', 'Approved for Inspection'), ('Rejected for Inspection', 'Rejected for Inspection')], default='Pending Approval for Inspection', max_length=80)),
                ('inspection_date', models.DateField(blank=True, null=True)),
                ('inspection_time', models.TimeField(blank=True, null=True)),
                ('owner_approval', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Fixed', 'Fixed'), ('Pending Approval', 'Pending Approval'), ('Approved for Inspection', 'Approved for Inspection'), ('Rejected for Inspection', 'Rejected for Inspection'), ('Inspection Done', 'Inspection Done')], default='Pending Approval', max_length=60)),
                ('maintenance_status', models.CharField(choices=[('Pending Approval', 'Pending Approval'), ('Approved for Inspection', 'Approved for Inspection'), ('Rejected for Inspection', 'Rejected for Inspection')], default='Pending Maintenance', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_number', models.CharField(max_length=10)),
                ('property_name', models.CharField(max_length=100)),
                ('property_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('property_location', models.CharField(max_length=100)),
                ('is_associated', models.BooleanField(default=False)),
                ('property_type', models.CharField(choices=[('Apartment', 'Apartment'), ('Land', 'Land'), ('Villa', 'Villa'), ('Town House', 'Town House')], max_length=50)),
                ('property_bedrooms', models.IntegerField()),
                ('property_bathrooms', models.IntegerField()),
                ('property_rentedFor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('address', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('dewa', models.CharField(max_length=50)),
                ('contract_start', models.DateField()),
                ('contract_end', models.DateField()),
                ('annual_rent', models.CharField(max_length=50)),
                ('contract_value', models.CharField(max_length=50)),
                ('security_deposit', models.CharField(max_length=50)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('mode_of_payment', models.CharField(choices=[('Cheque', 'Cheque'), ('Cash', 'Cash'), ('Bank Transfer', 'Bank Transfer'), ('Other', 'Other')], max_length=20)),
                ('number_of_cheques', models.IntegerField(blank=True, null=True)),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='records', to='website.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('maintenance_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='website.maintenanceticket')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='website.record')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paid_by_owner', models.BooleanField()),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='website.quotation')),
            ],
        ),
        migrations.AddField(
            model_name='maintenanceticket',
            name='record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.record'),
        ),
    ]
